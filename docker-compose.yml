version: '3.5'
services:
  configserver:
    image: configserver
    env_file: .env
    build: ./configserver
    ports:
       - '8888:8888'
    networks:
      - examplenetwork
  eurekanode0:
    image: eurekanode0
    build: ./eurekanode0
    env_file: .env
    container_name: eurekanode0
    hostname: eurekanode0
    ports:
      - '8761:8761'
    volumes:
      - /opt/eurekanode0/logs/:/opt/eurekanode0/logs
    networks:
      - examplenetwork
  zuulserver:
    image: zuulserver
    build: ./zuulserver
    env_file: .env
    container_name: zuulserver
#    mem_limit: 1073741824
    ports:
      - '5555:5555'
    links:
      - "eurekanode0:eurekanode0"
      - "configserver:configserver"
    networks:
      - examplenetwork
  authservice:
    image: authservice
    build: ./authservice
    ports:
      - '8901:8901'
    links:
      - "configserver:configserver"
      - "eurekanode0:eurekanode0"
      - "zuulserver:zuulserver"
    networks:
      - examplenetwork
  postgres:
    image: postgres
    env_file: .env
    build: ./postgres
    container_name: postgres
    ports:
      - '5432:5432'
    networks:
      - examplenetwork
    volumes:
      - /opt/postgres/postgres/logs/:/opt/postgres/logs
      - /opt/postgres/postgres/data:/var/lib/postgresql/data
  mongoserver0:      
    hostname: mongoserver0
    build: ./mongoserver0
    image: mongoserver0
    container_name: mongoserver0
    volumes:
      - /opt/mongoserver0/data:/data/db
      - /opt/mongoserver0/logs:/data/logs
    ports:
      - 27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
      - examplenetwork
  mongoserver1:     
    hostname: mongoserver1
    build: ./mongoserver1
    image: mongoserver1
    container_name: mongoserver1    
    volumes:
      - /opt/mongoserver1/data:/data/db
      - /opt/mongoserver1/logs:/data/logs
    ports:
      - 27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
      - examplenetwork
  mongoserver2:    
    hostname: mongoserver2
    build: ./mongoserver2
    image: mongoserver2
    container_name: mongoserver2    
    volumes:
      - /opt/mongoserver2/data:/data/db
      - /opt/mongoserver2/logs:/data/logs
    ports:
      - 27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    networks:
      - examplenetwork
  setupmongors:
    image: setupmongors
    build: ./setupmongors
    depends_on:
      - mongoserver0
      - mongoserver1
      - mongoserver2
    networks:
      - examplenetwork
  organizationservice:
    image: organizationservice
    env_file: .env
    build: ./organizationservice
    restart: always
    ports:
      - '8080:8080'
    networks:
      - examplenetwork
    depends_on:      
      - postgres
      - configserver
  userservice:
    image: userservice
    env_file: .env
    build: ./userservice
    ports:
      - '8081:8081'
    networks:
      - examplenetwork
    depends_on:      
      - mongoserver0
      - configserver
  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
    - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
    - examplenetwork
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
    - examplenetwork
  kafkaserver:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafkaserver:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka-broker
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
    - zookeeper
    networks:
    - examplenetwork
  zipkinserver:
    image: openzipkin/zipkin
    container_name: zipkinserver
    environment:
      - STORAGE_TYPE=mem   
    ports:
      - '9411:9411'
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 4096M
        reservations:
          cpus: '0.25'
          memory: 4096M
    networks:
      - examplenetwork  
networks:
  examplenetwork:
    driver: bridge   
    ipam:
      driver: default
